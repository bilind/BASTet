[README]

The file, mypeakfinder.py is the main python program to control any of the analysis desired to be performed. It's
purpose is to queue the job you want into Carver, this means its meant to be run on the normal login node. The second,
pfrun.py is what actually runs the analysis. To be clear, mypeakfinder creates a pbs script containing the appropriate
pfrun.py command. The pfrun.py program can be run independently but through an already running interactive job (unless
you skip the LPF analysis). Both mypeakfinder.py and pfrun.py create pbs scripts in a unique temporary file using the
python module tempfile and its function mkstemp().

Most of the following information can be viewed any time with the -h flag, that is 'python mypeakfinder.py -h' or
'python pfrun.py -h'. Here's how they work. First, mypeakfinder. In order to run it needs at least an OMSIFile
parameter, the rest of the parameter flags can be used combined or alone. It can accept the following flags:

	'-f' or 'file'	Either of these flags indicates that the following argument is the OMSIFile to be 								
					analyzed. Example: 'python mypeakfinder.py -f ~/omsi_data/napi/20120711_Brain.h5'
					or: 'python mypeakfinder.py --file=/omsi_data/napi/20120711_Brain.h5'
					
	expIndex		Experiment index used by 'omsiFile.get_experiment( expIndex )'. This has a default value of 0,
					if you want to use another then use this flag. Example: 
					'python mypeakfinder.py -f ~/omsi_data/napi/20120711_Brain.h5 --expIndex=2'
					
	dataIndex		Data index used by 'exp.get_msidata( dataIndex )'. This has a default value of 0,
					if you want to use another then use this flag. Example: 
					'python mypeakfinder.py -f ~/omsi_data/napi/20120711_Brain.h5 --dataIndex=2'
	
	peakheight, slwindow, smoothwidth
				
					LPF integer parameters, their defaults are: peakheight=10, slwindow=100, smoothwidth=3
					If another value is desired then use these to change it. 
					Example: 'python mypeakfinder.py -f ~/omsi_data/napi/20120711_Brain.h5 --peakheight=15'

	mz_threshold, treecut

					NPG floating parameters, their defaults are: mz_threshold=0.05, treecut=0.1
					If another value is desired then use these to change it. 
					Example: 'python mypeakfinder.py -f ~/omsi_data/napi/20120711_Brain.h5 --treecut=0.5'
	
	
	LPFIndex		Analysis index to be used for running NPG and/or Peak Cube portions. This is useful if you 		
					want you already have the LPF analysis data and need to run the other analysis with it. 
					Example: 'python mypeakfinder.py -f ~/omsi_data/napi/20120711_Brain.h5 --LPFIndex=3'
					This will not perform the LPF analysis and will instead look in analysis index 3 for the 		
					LPF data to be used in other analysis.
	
	NPGIndex		Same as LPFIndex but for the NPG analysis. This is useful if you need to run only the Peak 
					Cube portion and already have the NPG analysis data.
					Example: 'python mypeakfinder.py -f ~/omsi_data/napi/20120711_Brain.h5 --NPGIndex=4'
					
	SkipNPG			This flag skips the NPG portion. This is useful if you just want to run the LPF analysis. 	
					If this flag is enabled then peak cube generation will also be skipped.
					Example: 'python mypeakfinder.py -f ~/omsi_data/napi/20120711_Brain.h5 --SkipNPG'

	SkipPeakCube	This flag skips the Peak Cube generation. This is useful if you just want to run the LPF 			
					and NPG analysis. 									
					Example: 'python mypeakfinder.py -f ~/omsi_data/napi/20120711_Brain.h5 --SkipPeakCube'

	monitor			Use this if you want to see the progress output of the analysis. The way this works is by 		
					reading the output file that is being generated by the job.
					Example: 'python mypeakfinder.py -f ~/omsi_data/napi/20120711_Brain.h5 --monitor'
					

The flags can be combined with one another allowing control of the analysis parameters and running portions of it
independently. Here are examples of all the usage cases in terms of analysis runs:

python mypeakfinder.py -f ~/omsi_data/20120711_Brain.h5 --peakheight=15
	- run all analysis on Brain with 15 peakheight for LPF.
	
python mypeakfinder.py -f ~/omsi_data/20120711_Brain.h5 --peakheight=15 --SkipNPG --SkipPeakCube
	- run LPF alone with peakheight 15.
	
python mypeakfinder.py -f ~/omsi_data/20120711_Brain.h5 --LPFIndex=3 --SkipPeakCube
	- run NPG alone with the LPF data from analysis index 3.

python mypeakfinder.py -f ~/omsi_data/20120711_Brain.h5 --LPFIndex=3 --NPGIndex=4
	- run only the Peak Cube generation with the LPF data from analysis index 3 and NPG data from index 4.

python mypeakfinder.py -f ~/omsi_data/20120711_Brain.h5 --LPFIndex=3
	- run NPG with the LPF data from analysis index 3 followed by Peak Cube generation.

python mypeakfinder.py -f ~/omsi_data/20120711_Brain.h5 --peakheight=15 --SkipPeakCube
	- run LPF with peakheight 15 followed by NPG. No peak cube is generated.

python mypeakfinder.py -f ~/omsi_data/20120711_Brain.h5 --peakheight=15 --NPGIndex=4
	- run LPF with peakheight 15 followed by peak cube generation using analysis index 4 for the NPG data. 
	(not useful but possible if desired).

python mypeakfinder.py -f ~/omsi_data/20120711_Brain.h5 --LPFIndex=3 --NPGIndex=4 --SkipPeakCube
python mypeakfinder.py -f ~/omsi_data/20120711_Brain.h5 --LPFIndex=3 --SkipPeakCube --SkipNPG
python mypeakfinder.py -f ~/omsi_data/20120711_Brain.h5 --LPFIndex=3 --SkipNPG
	- neither of these run anything because of conflicting parameters.


As for pfrun.py, it can run the same parameters as mypeakfinder.py with the exception of "--monitor" and with the
addition of "--QueuePeakCube". The QueuePeakCube flag tells pfrun.py to run peak cube generation in a carver big memory
job by building the appropiate pbs script and queuing it. pfrun doesn't have the option to monitor this job but
mypeakfinder can. When peak cube is run through mypeakfinder it will use the QueuePeakCube flag and if the monitor flag
is used then it will also include this job.

-------------
Possible peak heights per file:

25		-	11042008_NIMS.h5
16		-	20110929_Tumor624.h5
10		-	2012_0403_KBL_platename.h5
15		-	20120711_Brain.h5
50		-	20120801_metabolite_standards.h5
30		-	20121012_lipid_extracts.h5
17		-	20111207_KBL_Roots_BigChip_SmallRoots.h5
17		-	20111208_KBL_Roots_SmallChip_BigRoot.h5
0		-	lung_orbitrap.h5
-------------






